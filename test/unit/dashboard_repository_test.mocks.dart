// Mocks generated by Mockito 5.4.6 from annotations
// in icon_app/test/unit/dashboard_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i5;

import 'package:icon_app/core/models/user.dart' as _i7;
import 'package:icon_app/core/services/supabase_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:supabase_flutter/supabase_flutter.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupabaseClient_0 extends _i1.SmartFake
    implements _i2.SupabaseClient {
  _FakeSupabaseClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserResponse_1 extends _i1.SmartFake implements _i2.UserResponse {
  _FakeUserResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SupabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseService extends _i1.Mock implements _i3.SupabaseService {
  MockSupabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SupabaseClient get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeSupabaseClient_0(
              this,
              Invocation.getter(#client),
            ),
          )
          as _i2.SupabaseClient);

  @override
  bool get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: false,
          )
          as bool);

  @override
  _i4.Stream<_i2.AuthState> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i4.Stream<_i2.AuthState>.empty(),
          )
          as _i4.Stream<_i2.AuthState>);

  @override
  _i4.Future<void> resetPassword(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [email]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.UserResponse> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i4.Future<_i2.UserResponse>.value(
              _FakeUserResponse_1(
                this,
                Invocation.method(#updatePassword, [newPassword]),
              ),
            ),
          )
          as _i4.Future<_i2.UserResponse>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getData({
    required String? table,
    String? select,
    Map<String, dynamic>? filters,
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getData, [], {
              #table: table,
              #select: select,
              #filters: filters,
              #limit: limit,
              #offset: offset,
            }),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> insertData({
    required String? table,
    required Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#insertData, [], {#table: table, #data: data}),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<void> deleteData({
    required String? table,
    required Map<String, dynamic>? filters,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteData, [], {
              #table: table,
              #filters: filters,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String> uploadFile({
    required String? bucket,
    required String? path,
    required _i5.Uint8List? fileBytes,
    String? contentType,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#uploadFile, [], {
              #bucket: bucket,
              #path: path,
              #fileBytes: fileBytes,
              #contentType: contentType,
            }),
            returnValue: _i4.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#uploadFile, [], {
                  #bucket: bucket,
                  #path: path,
                  #fileBytes: fileBytes,
                  #contentType: contentType,
                }),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<_i5.Uint8List> downloadFile({
    required String? bucket,
    required String? path,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#downloadFile, [], {
              #bucket: bucket,
              #path: path,
            }),
            returnValue: _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
          )
          as _i4.Future<_i5.Uint8List>);

  @override
  _i4.Future<void> deleteFile({
    required String? bucket,
    required String? path,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteFile, [], {#bucket: bucket, #path: path}),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>?> getUserData(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserData, [userId]),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<_i7.User?> getUserProfile(_i2.User? supabaseUser) =>
      (super.noSuchMethod(
            Invocation.method(#convertSupabaseUserToAppUser, [supabaseUser]),
            returnValue: _i4.Future<_i7.User?>.value(),
          )
          as _i4.Future<_i7.User?>);

  @override
  _i4.Future<void> deleteUser() =>
      (super.noSuchMethod(
            Invocation.method(#deleteUser, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
